#include <iostream>
#include <cmath>
#include <map>

using namespace std;
int NOD(int, int);
int NOK (int, int);
int prostoe_chislo(int n);
int sovershenoe_chislo (int n);
struct user_data{
    int a;
    int b;
};
map <string, user_data> input_number(map<string, user_data> userdata){
    int a, b;
    string username;
    cout << "Введите имя пользователя: ";
    cin >> username;
    if (userdata.find(username) == userdata.end() || username == ""){
        cout << "Введите первое число а: ";
        cin >> a;
        cout << "Введите второе число b: ";
        cin >> b;
        user_data data = {a, b};
        userdata[username] = data;
    }
    else{
        cout << endl <<  "Данное имя пользователя занято" << endl;
    }
    return userdata;
}
map <string, user_data> output_number(map<string, user_data> userdata){
    string username;
    cout << "Введите имя пользователя: ";
    cin >> username;
    if (userdata.find(username) != userdata.end() || username == ""){
        prostoe_chislo(userdata[username].a);
        prostoe_chislo(userdata[username].b);
        sovershenoe_chislo(userdata[username].a);
        sovershenoe_chislo(userdata[username].b);
        cout << "NOD = " << NOD(userdata[username].a,userdata[username].b) << endl;
        cout << "NOK = " << NOK (userdata[username].a,userdata[username].b)<< endl;
    }
    else{
        cout << endl << "Данное имя пользователя не существует" << endl;
    }
    return userdata;
}
int main()
{
    map <string, user_data> users;
    map <int, map <string, user_data> (*)(map<string, user_data>)> commands;
    commands[1] = input_number;
    commands[2] = output_number;
    int command = -1;
    while (command != 0){
        cout << "Введите команду(0-выход, 1-произвести расчёты, 2-вывести результат): ";
        cin >> command;
        if (commands.find(command) != commands.end()){
            cout << endl << endl;
            users = commands[command](users);
            cout << endl << endl;
        }
    }
    return 0;
}
int prostoe_chislo (int n) {
    int  s=0;
    if (n > 1) {
        for (int i = 1; i < n; i++)
            if (n % i == 0) {
                 s+=1;
            }
            if (s>=2) {
                 cout << "Число " << n << " => " << "НЕ простое" << endl;
            } else {
                 cout << "Число " << n << " => " << "простое" << endl;
            }
    }
}
int sovershenoe_chislo (int n) {
int sum=0;
   for (int i = 1; i < n; i++) {
        if (n%i == 0) {
            sum += i;
        }
    }
    if (sum==n){
        cout << "Число " << n << " => " << "совершенное" << endl;
    }
    else{
        cout << "Число " << n << " => " << "НЕ совершенное" << endl;
        }
}
int NOD(int a1, int a2){// наибольший общий делитель
    if (a2==0){
        return a1;
    }
    else
        return NOD(a2,a1%a2);
}
int NOK (int a1, int a2) {// наименьшее общее кратное
    return a1 / NOD(a1, a2) * a2;
}

