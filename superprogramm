#include <iostream> 
#include <vector> 
#include <string>  
using namespace std;  struct paint_item {     int type;     string color;      int volume;     double price; }; double WallSquare(){     double square=0, width, height;     string command;     cout << "Введите + чтобы добавить стену и - чтобы добавить выподающий участок. Для продолжения - 0" << endl;     cin >> command;     while (command != "0"){         if (command == "+"){             cout << "Ширина: ";             cin >> width;             cout << "Высота: ";             cin >> height;             square += width*height;         }         else if (command == "-"){             cout << "Ширина: ";             cin >> width;             cout << "Высота: ";             cin >> height;             square -= width*height;             if (square < 0)                 square = 0;         }         else{             cout << "Такой команды не существует" << endl;         }         cin >> command;     }     return square; } double coloring_cost(double square, int typeCost, int colorCost, int layerNumber){     return square*colorCost*layerNumber; } int package_optional(double volumePackage, double volume){     return int(volume/volumePackage)+(volume-(volumePackage*int(volume/volumePackage))==0?0:1); } void budget_options(double square, int budget, vector<paint_item> paints){     int layers_number=2;     paint_item current;     bool colorChoice = false;     for (int i=0; i<paints.size(); i++){         if (package_optional(paints[i].volume, square*2)*paints[i].price<=budget){             while(package_optional(paints[i].volume, square*(layers_number+1))*paints[i].price < budget)                 layers_number++;             current = paints[i];             colorChoice = true;             break;         }     }     if (colorChoice){         if (layers_number > 7)             layers_number = 7;         cout << "Будет потрачено: " << package_optional(current.volume, current.volume*layers_number)*current.price << " руб." <<         endl << "Цвет краски - " << current.color << endl << "Количество банок " << package_optional(current.volume, square*layers_number) << endl         << "Количество слоёв для покраски: " << layers_number << endl << "Сорт краски: " << (current.volume?"высший":"стандартный") << endl;     }     else         cout << "Невозможно покрасить - недостаточно средств" << endl; } void MainMenu(int com, vector<paint_item> paints){     if (com == 1){         cout << endl << endl;         cout << "Все виды красок: " << endl << endl;         for (int i=0; i<paints.size(); i++){             cout << "Цвет - " << paints[i].color << ", сорт - " << (paints[i].type?"высший":"стандартный")             << ", цена - " << paints[i].price << ", объём банки - " << paints[i].volume << endl;         }         cout << endl << endl;     }     if (com == 2){         cout << endl << endl;         paint_item it;         double square=0;         int layerNumber, paintsChoice;         square = WallSquare();         cout << endl << endl;         for (int i=0; i<paints.size(); i++){             cout << i+1 << ") Цвет " << paints[i].color << " сорт - " << (paints[i].type?"высший":"стандартный") << " цена - " << paints[i].price << " ";         }         cout << endl << "Введите номер краски: ";         cin >> paintsChoice;         it = paints[paintsChoice-1];         cout << "Введите количество слоёв: ";         cin >> layerNumber;         cout << endl << "Стоимость покраски составит - " << coloring_cost(square, it.type, it.price, layerNumber) << " руб.";         cout << endl << endl << endl;     }     if (com == 3){         double square=0;         int budget;         cout << "Введите свой бюджет: ";         cin >> budget;          square = WallSquare();         cout << endl << endl;         budget_options(square, budget, paints);         cout << endl << endl;     } }  int main() {     vector<paint_item> paints;     paints.push_back({1, "белый", 5, 2200});     paints.push_back({1, "бежевый", 5, 2000});     paints.push_back({1, "чёрный", 5, 1990});     paints.push_back({1, "белый", 5, 1900});     paints.push_back({1, "бежевый", 5, 1700});     paints.push_back({0, "чёрный", 5, 1650});     paints.push_back({0, "синий", 5, 1500});     paints.push_back({0, "красный", 5, 1300});     paints.push_back({0, "синий", 5, 1200});     paints.push_back({0, "красный", 5, 1000});     int command;     cout << "Введите номер режима(1 - Справочник красок, 2 - Поверхность и стоимость, 3 - Нормы и ограничения, 4 - Выход): ";     cin >> command;     while (command != 4){         MainMenu(command, paints);         cout << "Введите номер режима(1 - Справочник красок, 2 - Поверхность и стоимость, 3 - Нормы и ограничения, 4 - Выход): ";         cin >> command;     }     return 0; } 
